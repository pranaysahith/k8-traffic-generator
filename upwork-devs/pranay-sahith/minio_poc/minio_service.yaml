apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: source-minio
    component: core
  name: source-minio
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: source-minio
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: source-minio
        component: core
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8000"
    spec:
      containers:
        - name: source-minio
          image: minio/minio:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: MINIO_ACCESS_KEY
              value: "minio1"
            - name: MINIO_SECRET_KEY
              value: "minio1@123"
          args:
            - server
            - "/data"
          volumeMounts:
          - name: data
            mountPath: "/data"
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 500m
              memory: 500Mi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: source-minio-service
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 9000
      protocol: TCP
      name: http
  selector:
    app: source-minio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: target-minio
    component: core
  name: target-minio
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: target-minio
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: target-minio
        component: core
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8000"
    spec:
      containers:
        - name: target-minio
          image: minio/minio:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: MINIO_ACCESS_KEY
              value: "minio2"
            - name: MINIO_SECRET_KEY
              value: "minio2@123"
          args:
            - server
            - "/data"
          volumeMounts:
          - name: data
            mountPath: "/data"
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 500m
              memory: 500Mi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: target-minio-service
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 9000
      protocol: TCP
      name: http
  selector:
    app: target-minio
---